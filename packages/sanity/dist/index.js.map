{"version":3,"sources":["../src/schemas/entities/webpage-entity.ts","../src/schemas/entities/article-entity.ts","../src/schemas/entities/product-entity.ts","../src/schemas/entities/event-entity.ts","../src/schemas/entities/faq-entity.ts","../src/schemas/entities/person-entity.ts","../src/schemas/entities/about-page-entity.ts","../src/schemas/entities/contact-page-entity.ts","../src/schemas/entities/index.ts","../src/schemas/global/organization.ts","../src/schemas/global/person.ts","../src/schemas/global/faq-item.ts","../src/schemas/global/index.ts","../src/schemas/fields/schema-markup/address.ts","../src/schemas/fields/schema-markup/aggregate-rating.ts","../src/schemas/fields/schema-markup/geo.ts","../src/schemas/fields/metadata/meta-description.ts","../src/context/SeoDefaultsContext.tsx","../src/components/partials/CardWithIcon.tsx","../src/components/core/InputWithGlobalDefault.tsx","../src/components/socials/facebook/FacebookCard.module.css","../src/utils/string.ts","../src/components/partials/SocialCardWrapper.tsx","../src/components/socials/facebook/FacebookCard.tsx","../src/components/socials/twitter/TwitterCard.module.css","../src/components/socials/twitter/TwitterCard.tsx","../src/components/socials/google/GoogleEntry.module.css","../src/components/socials/google/GoogleEntry.tsx","../src/components/core/PageSeoInput/PreviewGroup.tsx","../src/components/partials/ButtonWithIcon.tsx","../src/components/core/PageSeoInput/PageSeoInput.tsx","../src/schemas/fields/metadata/page-metadata.ts","../src/utils/needs.ts","../src/components/core/PageSchemaMarkupInput/PageSchemaMarkupInput.tsx","../src/components/core/PageSchemaMarkupInput/SchemaMarkupTypeSelector.tsx","../src/globals.ts","../src/schemas/fields/schema-markup/schemaMarkup.ts","../src/components/core/IndexingControls.tsx","../src/components/core/SeoLayoutWrapper.tsx","../src/schemas/fields/metadata/indexing.ts","../src/components/core/Favicon/WindowControls.tsx","../src/components/core/Favicon/favicon-preview.module.css","../src/components/core/Favicon/BrowserTab.tsx","../src/components/core/Favicon/FaviconPreview.tsx","../src/schemas/fields/metadata/favicon.ts","../src/schemas/fields/index.ts","../src/schemas/singleton/schema-defaults.ts","../src/schemas/singleton/seo-defaults.ts","../src/schemas/singleton/social-networks.ts","../src/schemas/singleton/index.ts","../src/index.ts"],"names":["defineType","defineField","MdBusiness","MdPerson","createContext","useClient","useState","useCallback","useEffect","seoDefaults","useContext","jsx","Card","jsxs","Flex","Text","MdWarning","MdCheck","Box","Avatar","Stack","FacebookCard_default","TwitterCard_default","useRootTheme","GoogleEntry_default","Button","MdEdit","MdPreview","useFormValue","set","useToast","c","Grid","value","MdPeople","MdEmail","MdArticle","MdCreate","MdEvent","MdQuestionAnswer","MdStore","MdShoppingBag","MdPageview","MdWeb","MdInfo","IoArrowRedo","MdPlaylistRemove","useDataset","useProjectId","useMemo","buildSrc","AiOutlineGlobal","IoSparklesSharp","MdSettingsSuggest","MdSearch","MdShare","definePlugin"],"mappings":"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","file":"index.js","sourcesContent":["import { defineType, defineField } from \"sanity\";\n\nexport const schemaMarkupWebPageFields = defineType({\n\tname: \"schemaMarkupWebPageFields\",\n\ttitle: \"WebPage Fields\",\n\ttype: \"object\",\n\tfields: [\n\t\tdefineField({ name: \"name\", type: \"string\" }),\n\t\tdefineField({ name: \"description\", type: \"text\" }),\n\t\tdefineField({ name: \"inLanguage\", type: \"string\" }),\n\t\t// defineField({ name: \"primaryImageOfPage\", type: \"jsonldImageObject\" }),\n\t\tdefineField({ name: \"datePublished\", type: \"datetime\" }),\n\t\tdefineField({ name: \"dateModified\", type: \"datetime\" }),\n\t\t// defineField({\n\t\t// \tname: \"breadcrumb\",\n\t\t// \ttitle: \"Breadcrumb (optional)\",\n\t\t// \ttype: \"jsonldBreadcrumbListFields\",\n\t\t// }),\n\t\tdefineField({\n\t\t\tname: \"about\",\n\t\t\ttitle: \"About (Entities)\",\n\t\t\ttype: \"array\",\n\t\t\tof: [\n\t\t\t\t{ type: \"schemaMarkupPerson\" },\n\t\t\t\t{ type: \"schemaMarkupOrganization\" },\n\t\t\t],\n\t\t}),\n\t],\n\tpreview: {\n\t\tselect: { title: \"name\", subtitle: \"dateModified\" },\n\t\tprepare: ({ title, subtitle }) => ({ title: title || \"WebPage\", subtitle }),\n\t},\n});\n","import { defineType, defineField } from \"sanity\";\n\nexport const schemaMarkupArticleFields = defineType({\n\tname: \"schemaMarkupArticleFields\",\n\ttitle: \"Article Fields\",\n\ttype: \"object\",\n\tfields: [\n\t\tdefineField({\n\t\t\tname: \"headline\",\n\t\t\ttype: \"string\",\n\t\t\tvalidation: (r) => r.required(),\n\t\t}),\n\t\t// defineField({ name: \"articleSection\", type: \"string\" }),\n\t\t// defineField({ name: \"datePublished\", type: \"datetime\" }),\n\t\t// defineField({ name: \"dateModified\", type: \"datetime\" }),\n\t\tdefineField({\n\t\t\tname: \"author\",\n\t\t\ttitle: \"Author(s)\",\n\t\t\ttype: \"array\",\n\t\t\tof: [\n\t\t\t\t{ type: \"schemaMarkupPerson\" },\n\t\t\t\t{ type: \"schemaMarkupOrganization\" },\n\t\t\t],\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"publisher\",\n\t\t\ttitle: \"Publisher\",\n\t\t\ttype: \"schemaMarkupOrganization\",\n\t\t}),\n\t\t// defineField({\n\t\t// \tname: \"image\",\n\t\t// \ttitle: \"Article Image\",\n\t\t// \ttype: \"jsonldImageObject\",\n\t\t// }),\n\t\t// defineField({\n\t\t// \tname: \"mainEntityOfPage\",\n\t\t// \ttype: \"url\",\n\t\t// \tdescription: \"Canonical URL of the page hosting this article.\",\n\t\t// }),\n\t],\n\tpreview: {\n\t\tselect: { title: \"headline\", subtitle: \"articleSection\" },\n\t\tprepare: ({ title, subtitle }) => ({ title: title || \"Article\", subtitle }),\n\t},\n});\n","import { defineType, defineField } from \"sanity\";\n// import { createNote } from \"../../../../../utils/create\";\n\nexport const schemaMarkupProductFields = defineType({\n\tname: \"schemaMarkupProductFields\",\n\ttitle: \"Product Fields\",\n\ttype: \"object\",\n\tfields: [\n\t\t// createNote({\n\t\t// \tdescription:\n\t\t// \t\t\"Name, image, offers, aggregateRating, reviews, description, and SKU are automatically generated from the product data.\",\n\t\t// }),\n\t\t// defineField({\n\t\t// \tname: \"name\",\n\t\t// \ttype: \"string\",\n\t\t// \tvalidation: (r) => r.required(),\n\t\t// }),\n\t\t// defineField({ name: \"description\", type: \"text\" }),\n\t\tdefineField({\n\t\t\tname: \"brand\",\n\t\t\ttitle: \"Brand\",\n\t\t\ttype: \"schemaMarkupOrganization\",\n\t\t}),\n\t\t// defineField({\n\t\t// \tname: \"sku\",\n\t\t// \ttype: \"string\",\n\t\t// \tdescription: \"Stock keeping unit.\",\n\t\t// }),\n\t\tdefineField({\n\t\t\tname: \"mpn\",\n\t\t\ttype: \"string\",\n\t\t\tdescription: \"Manufacturer part number.\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"gtin\",\n\t\t\ttype: \"string\",\n\t\t\tdescription: \"GTIN (8/12/13/14).\",\n\t\t}),\n\t\t// defineField({\n\t\t// \tname: \"image\",\n\t\t// \ttitle: \"Primary Image\",\n\t\t// \ttype: \"jsonldImageObject\",\n\t\t// }),\n\t\t// defineField({\n\t\t// \tname: \"offers\",\n\t\t// \ttitle: \"Offers\",\n\t\t// \ttype: \"array\",\n\t\t// \tof: [{ type: \"jsonldOffer\" }],\n\t\t// \tdescription: \"Price, currency, availability, URL, itemCondition, etc.\",\n\t\t// }),\n\t\t// defineField({\n\t\t// \tname: \"aggregateRating\",\n\t\t// \ttitle: \"Aggregate Rating\",\n\t\t// \ttype: \"jsonldAggregateRating\",\n\t\t// }),\n\t\t// defineField({\n\t\t// \tname: \"review\",\n\t\t// \ttitle: \"Reviews\",\n\t\t// \ttype: \"array\",\n\t\t// \tof: [{ type: \"jsonldReview\" }],\n\t\t// }),\n\t],\n\tpreview: {\n\t\tselect: { title: \"name\" },\n\t\tprepare: ({ title }) => ({ title: title || \"Product\" }),\n\t},\n});\n","import { defineType, defineField } from \"sanity\";\n\nexport const schemaMarkupEventFields = defineType({\n\tname: \"schemaMarkupEventFields\",\n\ttitle: \"Event Fields\",\n\ttype: \"object\",\n\tfields: [\n\t\tdefineField({\n\t\t\tname: \"name\",\n\t\t\ttype: \"string\",\n\t\t\tvalidation: (r) => r.required(),\n\t\t}),\n\t\tdefineField({ name: \"description\", type: \"text\" }),\n\t\tdefineField({\n\t\t\tname: \"startDate\",\n\t\t\ttype: \"datetime\",\n\t\t\tvalidation: (r) => r.required(),\n\t\t}),\n\t\tdefineField({ name: \"endDate\", type: \"datetime\" }),\n\t\t// defineField({\n\t\t// \tname: \"eventStatus\",\n\t\t// \ttype: \"string\",\n\t\t// \toptions: {\n\t\t// \t\tlist: [\n\t\t// \t\t\t{ title: \"Scheduled\", value: \"EventScheduled\" },\n\t\t// \t\t\t{ title: \"Cancelled\", value: \"EventCancelled\" },\n\t\t// \t\t\t{ title: \"Postponed\", value: \"EventPostponed\" },\n\t\t// \t\t\t{ title: \"Rescheduled\", value: \"EventRescheduled\" },\n\t\t// \t\t\t{ title: \"Moved Online\", value: \"EventMovedOnline\" },\n\t\t// \t\t],\n\t\t// \t},\n\t\t// }),\n\t\tdefineField({\n\t\t\tname: \"eventAttendanceMode\",\n\t\t\ttype: \"string\",\n\t\t\toptions: {\n\t\t\t\tlist: [\n\t\t\t\t\t{ title: \"Offline\", value: \"OfflineEventAttendanceMode\" },\n\t\t\t\t\t{ title: \"Online\", value: \"OnlineEventAttendanceMode\" },\n\t\t\t\t\t{ title: \"Mixed\", value: \"MixedEventAttendanceMode\" },\n\t\t\t\t],\n\t\t\t},\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"location\",\n\t\t\ttitle: \"Location\",\n\t\t\ttype: \"object\",\n\t\t\tfields: [\n\t\t\t\tdefineField({ name: \"name\", type: \"string\" }),\n\t\t\t\tdefineField({ name: \"url\", type: \"url\" }),\n\t\t\t\tdefineField({ name: \"address\", type: \"schemaMarkupAddress\" }),\n\t\t\t\tdefineField({ name: \"geo\", type: \"schemaMarkupGeo\" }),\n\t\t\t],\n\t\t}),\n\t\t// defineField({\n\t\t// \tname: \"image\",\n\t\t// \ttype: \"jsonldImageObject\",\n\t\t// }),\n\t\t// defineField({\n\t\t// \tname: \"offers\",\n\t\t// \ttitle: \"Offers / Tickets\",\n\t\t// \ttype: \"array\",\n\t\t// \tof: [{ type: \"jsonldOffer\" }],\n\t\t// }),\n\t\tdefineField({\n\t\t\tname: \"organizer\",\n\t\t\ttitle: \"Organizer\",\n\t\t\ttype: \"array\",\n\t\t\tof: [\n\t\t\t\t{ type: \"schemaMarkupOrganization\" },\n\t\t\t\t{ type: \"schemaMarkupPerson\" },\n\t\t\t],\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"performer\",\n\t\t\ttitle: \"Performer(s)\",\n\t\t\ttype: \"array\",\n\t\t\tof: [\n\t\t\t\t{ type: \"schemaMarkupPerson\" },\n\t\t\t\t{ type: \"schemaMarkupOrganization\" },\n\t\t\t],\n\t\t}),\n\t],\n\tpreview: {\n\t\tselect: { title: \"name\", subtitle: \"startDate\" },\n\t\tprepare: ({ title, subtitle }) => ({ title: title || \"Event\", subtitle }),\n\t},\n});\n","import { defineType, defineField } from \"sanity\";\n\nexport const schemaMarkupFAQPageFields = defineType({\n\tname: \"schemaMarkupFAQPageFields\",\n\ttitle: \"FAQ Page Fields\",\n\ttype: \"object\",\n\tfields: [\n\t\tdefineField({\n\t\t\tname: \"mainEntity\",\n\t\t\ttitle: \"FAQ Items\",\n\t\t\ttype: \"array\",\n\t\t\tof: [{ type: \"schemaMarkupFAQItem\" }], // {question:string, answer:PortableText}\n\t\t\tvalidation: (r) => r.min(1),\n\t\t}),\n\t],\n\tpreview: {\n\t\tselect: { count: \"mainEntity.length\" },\n\t\tprepare: ({ count }) => ({\n\t\t\ttitle: \"FAQPage\",\n\t\t\tsubtitle: `${count || 0} item(s)`,\n\t\t}),\n\t},\n});\n","import { defineType, defineField } from \"sanity\";\n\nexport const schemaMarkupPersonFields = defineType({\n\tname: \"schemaMarkupPersonFields\",\n\ttitle: \"Person Fields\",\n\ttype: \"object\",\n\tfields: [\n\t\tdefineField({\n\t\t\tname: \"name\",\n\t\t\ttype: \"string\",\n\t\t\tvalidation: (r) => r.required(),\n\t\t}),\n\t\t// defineField({ name: \"jobTitle\", type: \"string\" }),\n\t\t// defineField({ name: \"url\", type: \"url\" }),\n\t\t// defineField({\n\t\t// \tname: \"image\",\n\t\t// \ttype: \"jsonldImageObject\",\n\t\t// }),\n\t\tdefineField({\n\t\t\tname: \"sameAs\",\n\t\t\ttitle: \"Profiles (sameAs)\",\n\t\t\ttype: \"array\",\n\t\t\tof: [{ type: \"url\" }],\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"affiliation\",\n\t\t\ttitle: \"Affiliation (Organizations)\",\n\t\t\ttype: \"array\",\n\t\t\tof: [{ type: \"schemaMarkupOrganization\" }],\n\t\t}),\n\t],\n\tpreview: {\n\t\tselect: { title: \"name\", subtitle: \"jobTitle\" },\n\t\tprepare: ({ title, subtitle }) => ({ title: title || \"Person\", subtitle }),\n\t},\n});\n","import { defineType, defineField } from \"sanity\";\nimport { SchemaFieldWithDefault } from \"~/components/core\";\n\n\nexport const schemaMarkupAboutPageFields = defineType({\n\tname: \"schemaMarkupAboutPageFields\",\n\ttitle: \"About Page Fields\",\n\ttype: \"object\",\n\tfields: [\n\t\tdefineField({\n\t\t\tname: \"name\",\n\t\t\ttype: \"string\",\n\t\t\tdescription: \"Name of the about page (defaults to page title)\",\n\t\t\t// components: {\n\t\t\t// \tinput: SchemaFieldWithDefault\n\t\t\t// }, \n\t\t\t// options: {\n\t\t\t// \tautomapName: 'description',\n\t\t\t// \tmatchingDefaultField: 'title'\n\t\t\t// }\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"description\",\n\t\t\ttype: \"text\",\n\t\t\tdescription:\n\t\t\t\t\"Description of the about page (defaults to meta description)\",\n\t\t\t// components: {\n\t\t\t// \tinput: SchemaFieldWithDefault\n\t\t\t// }, \n\t\t\t// options: {\n\t\t\t// \tmatchingDefaultField: 'description',\n\t\t\t// \tautomapName: 'description'\n\t\t\t// }\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"inLanguage\",\n\t\t\ttype: \"string\",\n\t\t\tdescription: \"Language code (e.g., 'en-US')\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"datePublished\",\n\t\t\ttype: \"datetime\",\n\t\t\tdescription: \"When the page was first published\",\n\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"dateModified\",\n\t\t\ttype: \"datetime\",\n\t\t\tdescription: \"When the page was last modified\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"about\",\n\t\t\ttitle: \"About (Entities)\",\n\t\t\ttype: \"array\",\n\t\t\tdescription: \"People or organizations this page is about\",\n\t\t\tof: [\n\t\t\t\t{ type: \"schemaMarkupPerson\" },\n\t\t\t\t{ type: \"schemaMarkupOrganization\" },\n\t\t\t],\n\t\t}),\n\t],\n\tpreview: {\n\t\tselect: { title: \"name\" },\n\t\tprepare: ({ title }) => ({ title: title || \"About Page\" }),\n\t},\n});\n","import { defineType, defineField } from \"sanity\";\n\nexport const schemaMarkupContactPageFields = defineType({\n\tname: \"schemaMarkupContactPageFields\",\n\ttitle: \"Contact Page Fields\",\n\ttype: \"object\",\n\tfields: [\n\t\tdefineField({\n\t\t\tname: \"name\",\n\t\t\ttype: \"string\",\n\t\t\tdescription: \"Name of the contact page (defaults to page title)\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"description\",\n\t\t\ttype: \"text\",\n\t\t\tdescription:\n\t\t\t\t\"Description of the contact page (defaults to meta description)\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"inLanguage\",\n\t\t\ttype: \"string\",\n\t\t\tdescription: \"Language code (e.g., 'en-US')\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"datePublished\",\n\t\t\ttype: \"datetime\",\n\t\t\tdescription: \"When the page was first published\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"dateModified\",\n\t\t\ttype: \"datetime\",\n\t\t\tdescription: \"When the page was last modified\",\n\t\t}),\n\t],\n\tpreview: {\n\t\tselect: { title: \"name\" },\n\t\tprepare: ({ title }) => ({ title: title || \"Contact Page\" }),\n\t},\n});\n","import { schemaMarkupWebPageFields } from \"./webpage-entity\";\nimport { schemaMarkupArticleFields } from \"./article-entity\";\nimport { schemaMarkupProductFields } from \"./product-entity\";\nimport { schemaMarkupEventFields } from \"./event-entity\";\nimport { schemaMarkupFAQPageFields } from \"./faq-entity\";\nimport { schemaMarkupPersonFields } from \"./person-entity\";\nimport { schemaMarkupAboutPageFields } from \"./about-page-entity\";\nimport { schemaMarkupContactPageFields } from \"./contact-page-entity\";\n\nexport default [\n\tschemaMarkupArticleFields,\n\tschemaMarkupProductFields,\n\tschemaMarkupEventFields,\n\tschemaMarkupFAQPageFields,\n\tschemaMarkupWebPageFields,\n\tschemaMarkupPersonFields,\n\tschemaMarkupAboutPageFields,\n\tschemaMarkupContactPageFields,\n];\n","// const merge = (globalOfType, pageOfType, concat: string[]) => {};\n\nimport { MdBusiness } from \"react-icons/md\";\nimport { defineType, defineField } from \"sanity\";\n\nexport const schemaMarkupOrganization = defineType({\n\tname: \"schemaMarkupOrganization\",\n\ticon: MdBusiness,\n\ttitle: \"Organization\",\n\ttype: \"document\",\n\tvalidation: (Rule) =>\n\t\tRule.custom((val) => {\n\t\t\tif (!val) return true;\n\t\t\t// biome-ignore lint: accessing dynamic properties\n\t\t\tconst hasRef = !!(val as any).organization?._ref;\n\t\t\t// biome-ignore lint: accessing dynamic properties\n\t\t\tconst hasInline = !!(val as any).name;\n\t\t\treturn (\n\t\t\t\thasRef ||\n\t\t\t\thasInline ||\n\t\t\t\t\"Provide an organization reference or set a Name.\"\n\t\t\t);\n\t\t}),\n\tfields: [\n\t\tdefineField({\n\t\t\tname: \"name\",\n\t\t\ttitle: \"Name (Inline)\",\n\t\t\ttype: \"string\",\n\t\t\tdescription: \"Inline fallback/override if no reference is set.\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"url\",\n\t\t\ttitle: \"URL (Inline)\",\n\t\t\ttype: \"url\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"logo\",\n\t\t\ttitle: \"Logo (Inline)\",\n\t\t\ttype: \"image\", // shared image object type\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"department\",\n\t\t\ttitle: \"Department (Inline)\",\n\t\t\ttype: \"array\",\n\t\t\tof: [{ type: \"reference\", to: [{ type: \"schemaMarkupOrganization\" }] }],\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"contactPoint\",\n\t\t\ttitle: \"Contact Points\",\n\t\t\ttype: \"array\",\n\t\t\tdescription: \"Contact information for the organization\",\n\t\t\tof: [\n\t\t\t\t{\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tfields: [\n\t\t\t\t\t\tdefineField({\n\t\t\t\t\t\t\tname: \"contactType\",\n\t\t\t\t\t\t\ttitle: \"Contact Type\",\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\tdescription: \"e.g., customer service, sales, support\",\n\t\t\t\t\t\t\tvalidation: (Rule) => Rule.required(),\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tdefineField({\n\t\t\t\t\t\t\tname: \"telephone\",\n\t\t\t\t\t\t\ttitle: \"Telephone\",\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\tdescription: \"Phone number including country code\",\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tdefineField({\n\t\t\t\t\t\t\tname: \"email\",\n\t\t\t\t\t\t\ttitle: \"Email\",\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\tvalidation: (Rule) => Rule.email(),\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tdefineField({\n\t\t\t\t\t\t\tname: \"url\",\n\t\t\t\t\t\t\ttitle: \"Contact URL\",\n\t\t\t\t\t\t\ttype: \"url\",\n\t\t\t\t\t\t\tdescription: \"URL to contact form or page\",\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tdefineField({\n\t\t\t\t\t\t\tname: \"areaServed\",\n\t\t\t\t\t\t\ttitle: \"Area Served\",\n\t\t\t\t\t\t\ttype: \"array\",\n\t\t\t\t\t\t\tof: [{ type: \"string\" }],\n\t\t\t\t\t\t\tdescription: \"Geographic areas served (e.g., US, GB, Worldwide)\",\n\t\t\t\t\t\t\toptions: { layout: \"tags\" },\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tdefineField({\n\t\t\t\t\t\t\tname: \"availableLanguage\",\n\t\t\t\t\t\t\ttitle: \"Available Languages\",\n\t\t\t\t\t\t\ttype: \"array\",\n\t\t\t\t\t\t\tof: [{ type: \"string\" }],\n\t\t\t\t\t\t\tdescription: \"Languages available for this contact point\",\n\t\t\t\t\t\t\toptions: { layout: \"tags\" },\n\t\t\t\t\t\t}),\n\t\t\t\t\t],\n\t\t\t\t\tpreview: {\n\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\tcontactType: \"contactType\",\n\t\t\t\t\t\t\ttelephone: \"telephone\",\n\t\t\t\t\t\t\temail: \"email\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tprepare: ({ contactType, telephone, email }) => ({\n\t\t\t\t\t\t\ttitle: contactType || \"Contact Point\",\n\t\t\t\t\t\t\tsubtitle: telephone || email || \"\",\n\t\t\t\t\t\t}),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"sameAs\",\n\t\t\ttitle: \"Profiles (sameAs)\",\n\t\t\ttype: \"array\",\n\t\t\tof: [{ type: \"url\" }],\n\t\t\toptions: { layout: \"tags\" },\n\t\t}),\n\t],\n\tpreview: {\n\t\tselect: {\n\t\t\trefName: \"organization.name\",\n\t\t\trefUrl: \"organization.url\",\n\t\t\tinlineName: \"name\",\n\t\t\tinlineUrl: \"url\",\n\t\t\tlogoUrl: \"logo.asset.url\",\n\t\t},\n\t\tprepare: ({ refName, inlineName }) => {\n\t\t\tconst title = refName || inlineName || \"Organization\";\n\t\t\treturn {\n\t\t\t\ttitle,\n\t\t\t};\n\t\t},\n\t},\n});\n","import { MdPerson } from \"react-icons/md\";\nimport { defineType, defineField } from \"sanity\";\n\n/**\n * schemaMarkupPerson\n * Used wherever you need to reference a person (e.g., author, creator, performer, reviewer).\n * Lets editors either reference an existing Person document or enter inline details.\n */\n\nexport const schemaMarkupPerson = defineType({\n\tname: \"schemaMarkupPerson\",\n\ttitle: \"Person\",\n\ttype: \"document\",\n\ticon: MdPerson,\n\tvalidation: (Rule) =>\n\t\tRule.custom((val) => {\n\t\t\tif (!val) return true;\n\t\t\tconst hasRef = !!val.person?._ref;\n\t\t\tconst hasInline = !!val.name;\n\t\t\treturn hasRef || hasInline || \"Provide a person reference or set a Name.\";\n\t\t}),\n\tfields: [\n\t\t// defineField({\n\t\t// \tname: \"person\",\n\t\t// \ttitle: \"Reference\",\n\t\t// \ttype: \"reference\",\n\t\t// \tto: [{ type: \"person\" }], // change if your base person doc uses a different type name\n\t\t// \tweak: true,\n\t\t// \tdescription: \"Preferred: reference a Person document.\",\n\t\t// }),\n\t\tdefineField({\n\t\t\tname: \"name\",\n\t\t\ttitle: \"Name (Inline)\",\n\t\t\ttype: \"string\",\n\t\t\tdescription: \"Inline fallback or override if no reference is set.\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"url\",\n\t\t\ttitle: \"URL (Inline)\",\n\t\t\ttype: \"url\",\n\t\t\tdescription: \"Personal website or profile URL.\",\n\t\t}),\n\t\t// defineField({\n\t\t// \tname: \"image\",\n\t\t// \ttitle: \"Image (Inline)\",\n\t\t// \ttype: \"jsonldImageObject\", // reuse shared type\n\t\t// }),\n\t\tdefineField({\n\t\t\tname: \"sameAs\",\n\t\t\ttitle: \"Profiles (sameAs)\",\n\t\t\ttype: \"array\",\n\t\t\tof: [{ type: \"url\" }],\n\t\t\toptions: { layout: \"tags\" },\n\t\t\tdescription:\n\t\t\t\t\"Social or professional profiles associated with this person.\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"jobTitle\",\n\t\t\ttitle: \"Job Title (Optional)\",\n\t\t\ttype: \"string\",\n\t\t\tdescription: \"Role or title, if relevant (optional, ignored by Google).\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"affiliation\",\n\t\t\ttitle: \"Affiliation (Optional)\",\n\t\t\ttype: \"array\",\n\t\t\tof: [{ type: \"schemaMarkupOrganization\" }],\n\t\t\tdescription: \"Organizations this person is affiliated with.\",\n\t\t}),\n\t],\n\tpreview: {\n\t\tselect: {\n\t\t\trefName: \"person.name\",\n\t\t\tinlineName: \"name\",\n\t\t\trefImage: \"person.image\",\n\t\t\tinlineImage: \"image\",\n\t\t},\n\t\tprepare: ({ refName, inlineName }) => ({\n\t\t\ttitle: refName || inlineName || \"Person\",\n\t\t\tsubtitle: refName ? \"Referenced\" : \"Inline\",\n\t\t}),\n\t},\n});\n","import { defineType, defineField } from \"sanity\";\n\n/**\n * jsonldFAQItem\n * Represents a single Question/Answer pair for the FAQPage JSON-LD type.\n * Used inside an array field on FAQPage entities.\n *\n * Matches Google’s recommended structure:\n * {\n *   \"@type\": \"Question\",\n *   \"name\": \"Question text\",\n *   \"acceptedAnswer\": {\n *     \"@type\": \"Answer\",\n *     \"text\": \"Answer text\"\n *   }\n * }\n */\n\nexport const schemaMarkupFAQItem = defineType({\n\tname: \"schemaMarkupFAQItem\",\n\ttitle: \"FAQ Item\",\n\ttype: \"object\",\n\toptions: { collapsible: true, collapsed: true },\n\tfields: [\n\t\tdefineField({\n\t\t\tname: \"question\",\n\t\t\ttitle: \"Question\",\n\t\t\ttype: \"string\",\n\t\t\tvalidation: (Rule) => Rule.required(),\n\t\t\tdescription:\n\t\t\t\t\"The question being answered. (Used as the Question name in JSON-LD)\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"answer\",\n\t\t\ttitle: \"Answer\",\n\t\t\ttype: \"text\",\n\t\t\trows: 3,\n\t\t\tvalidation: (Rule) => Rule.required(),\n\t\t\tdescription:\n\t\t\t\t\"The answer text. (Plain text is fine; HTML will be stripped in JSON-LD output)\",\n\t\t}),\n\t],\n\tpreview: {\n\t\tselect: { title: \"question\", subtitle: \"answer\" },\n\t\tprepare({ title, subtitle }) {\n\t\t\tconst shortAnswer =\n\t\t\t\tsubtitle && subtitle.length > 60\n\t\t\t\t\t? subtitle.slice(0, 57).trim() + \"…\"\n\t\t\t\t\t: subtitle;\n\t\t\treturn {\n\t\t\t\ttitle: title || \"Untitled FAQ\",\n\t\t\t\tsubtitle: shortAnswer || \"\",\n\t\t\t};\n\t\t},\n\t},\n});\n","import { schemaMarkupOrganization } from \"./organization\";\nimport { schemaMarkupPerson } from \"./person\";\nimport { schemaMarkupFAQItem } from \"./faq-item\";\n\nexport default [\n\tschemaMarkupPerson,\n\tschemaMarkupOrganization,\n\tschemaMarkupFAQItem,\n];\n","import { defineType, defineField } from \"sanity\";\n\n/**\n * schemaMarkupAddress\n * Reusable inline PostalAddress object for JSON-LD entities.\n * Usually embedded inside Organization, Event, or LocalBusiness.\n *\n * Kept inline (not referenced) since most sites only have 1–few addresses.\n */\n\nexport const schemaMarkupAddress = defineType({\n\tname: \"schemaMarkupAddress\",\n\ttitle: \"Postal Address\",\n\ttype: \"object\",\n\toptions: { collapsible: true, collapsed: true },\n\tfields: [\n\t\tdefineField({\n\t\t\tname: \"streetAddress\",\n\t\t\ttitle: \"Street Address\",\n\t\t\ttype: \"string\",\n\t\t\tdescription: 'Street and number, e.g. \"123 Main St\".',\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"addressLocality\",\n\t\t\ttitle: \"City / Locality\",\n\t\t\ttype: \"string\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"addressRegion\",\n\t\t\ttitle: \"State / Region\",\n\t\t\ttype: \"string\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"postalCode\",\n\t\t\ttitle: \"Postal Code\",\n\t\t\ttype: \"string\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"addressCountry\",\n\t\t\ttitle: \"Country\",\n\t\t\ttype: \"string\",\n\t\t\tdescription:\n\t\t\t\t'ISO 3166-1 alpha-2 or country name (e.g. \"US\" or \"United States\").',\n\t\t}),\n\t],\n\tpreview: {\n\t\tselect: {\n\t\t\tstreet: \"streetAddress\",\n\t\t\tcity: \"addressLocality\",\n\t\t\tregion: \"addressRegion\",\n\t\t\tcountry: \"addressCountry\",\n\t\t},\n\t\tprepare({ street, city, region, country }) {\n\t\t\tconst line1 = street ? street : \"Address\";\n\t\t\tconst line2 = [city, region, country].filter(Boolean).join(\", \");\n\t\t\treturn {\n\t\t\t\ttitle: line1,\n\t\t\t\tsubtitle: line2 || \"\",\n\t\t\t};\n\t\t},\n\t},\n});\n","import { defineType, defineField } from \"sanity\";\n\n/**\n * jsonldAggregateRating\n * Represents the overall rating for a Product, LocalBusiness, or similar entity.\n *\n * Output example:\n * {\n *   \"@type\": \"AggregateRating\",\n *   \"ratingValue\": 4.7,\n *   \"reviewCount\": 128\n * }\n */\n\nexport const schemaMarkupAggregateRating = defineType({\n\tname: \"schemaMarkupAggregateRating\",\n\ttitle: \"Aggregate Rating\",\n\ttype: \"object\",\n\toptions: { collapsible: true, collapsed: true },\n\tfields: [\n\t\tdefineField({\n\t\t\tname: \"ratingValue\",\n\t\t\ttitle: \"Rating Value\",\n\t\t\ttype: \"number\",\n\t\t\tvalidation: (Rule) => Rule.min(1).max(5).precision(1),\n\t\t\tdescription: \"Average rating value (usually between 1.0 and 5.0).\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"reviewCount\",\n\t\t\ttitle: \"Review Count\",\n\t\t\ttype: \"number\",\n\t\t\tvalidation: (Rule) => Rule.min(0),\n\t\t\tdescription: \"Total number of reviews included in this aggregate.\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"bestRating\",\n\t\t\ttitle: \"Best Rating (Optional)\",\n\t\t\ttype: \"number\",\n\t\t\tdescription: \"Optional maximum rating value (defaults to 5 if omitted).\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"worstRating\",\n\t\t\ttitle: \"Worst Rating (Optional)\",\n\t\t\ttype: \"number\",\n\t\t\tdescription: \"Optional minimum rating value (defaults to 1 if omitted).\",\n\t\t}),\n\t],\n\tpreview: {\n\t\tselect: {\n\t\t\tvalue: \"ratingValue\",\n\t\t\tcount: \"reviewCount\",\n\t\t},\n\t\tprepare({ value, count }) {\n\t\t\treturn {\n\t\t\t\ttitle: value ? `⭐️ ${value.toFixed(1)} / 5` : \"Aggregate Rating\",\n\t\t\t\tsubtitle: count ? `${count} reviews` : \"\",\n\t\t\t};\n\t\t},\n\t},\n});\n","import { defineType } from \"sanity\";\n\nexport const schemaMarkupGeo = defineType({\n\tname: \"schemaMarkupGeo\",\n\ttitle: \"Geo Coordinates\",\n\ttype: \"object\",\n\toptions: { collapsible: true, collapsed: true, columns: 2 },\n\tfields: [\n\t\t{ name: \"latitude\", type: \"number\", validation: (r) => r.min(-90).max(90) },\n\t\t{\n\t\t\tname: \"longitude\",\n\t\t\ttype: \"number\",\n\t\t\tvalidation: (r) => r.min(-180).max(180),\n\t\t},\n\t],\n\tpreview: {\n\t\tselect: { lat: \"latitude\", lon: \"longitude\" },\n\t\tprepare: ({ lat, lon }) => ({\n\t\t\ttitle:\n\t\t\t\tlat && lon ? `${lat.toFixed(4)}, ${lon.toFixed(4)}` : \"Geo Coordinates\",\n\t\t}),\n\t},\n});\n","import { defineField } from \"sanity\";\n\nexport default defineField({\n\tname: \"metaDescription\",\n\ttitle: \"Meta Description\",\n\ttype: \"text\",\n\trows: 3,\n\tdescription: \"The description of the page. Used for the meta description.\",\n\tvalidation: (Rule) =>\n\t\tRule.max(160).warning(\n\t\t\t\"Long descriptions (over 160 characters) will be truncated by Google.\",\n\t\t),\n});\n","import {\n\tcreateContext,\n\tuseContext,\n\tuseEffect,\n\tuseState,\n\tuseCallback,\n} from \"react\";\nimport { useClient } from \"sanity\";\n\nconst SeoDefaultsContext = createContext(null);\n\nexport const SeoDefaultsProvider = ({ children }) => {\n\tconst client = useClient({ apiVersion: \"2024-10-01\" });\n\tconst [defaults, setDefaults] = useState({\n\t\tseoDefaults: null,\n\t\tschemaDefaults: null,\n\t});\n\n\tconst cleanup = useCallback(() => {\n\t\t// return function for useEffect cleanup\n\t\tif (cleanup.seoSub) {\n\t\t\tcleanup.seoSub.unsubscribe();\n\t\t}\n\t\tif (cleanup.schemaSub) {\n\t\t\tcleanup.schemaSub.unsubscribe();\n\t\t}\n\t}, []);\n\n\tconst sub = (query: string, property: string) => {\n\t\treturn client\n\t\t\t.listen(query)\n\t\t\t.subscribe((update) => {\n\t\t\t\tif (update.result) {\n\t\t\t\t\tsetDefaults((prev) => ({\n\t\t\t\t\t\t...prev,\n\t\t\t\t\t\t[property]: update.result,\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tconst seoSub = sub(`*[_type == \"seoDefaults\"][0]`, \"seoDefaults\");\n\t\tconst schemaSub = sub(`*[_type == \"schemaMarkupDefaults\"][0]`, \"schemaDefaults\");\n\n\t\tcleanup.seoSub = seoSub;\n\t\tcleanup.schemaSub = schemaSub;\n\n\t\tclient\n\t\t\t.fetch(`*[_type == \"seoDefaults\"][0]`)\n\t\t\t.then((seoDefaults) =>\n\t\t\t\tsetDefaults((prev) => ({\n\t\t\t\t\t...prev,\n\t\t\t\t\tseoDefaults,\n\t\t\t\t})),\n\t\t\t);\n\n\t\tclient\n\t\t\t.fetch(`*[_type == \"schemaMarkupDefaults\"][0]`)\n\t\t\t.then((schemaDefaults) =>\n\t\t\t\tsetDefaults((prev) => ({\n\t\t\t\t\t...prev,\n\t\t\t\t\tschemaDefaults,\n\t\t\t\t})),\n\t\t\t);\n\n\t\treturn cleanup;\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [client]);\n\n\treturn (\n\t\t<SeoDefaultsContext.Provider value={defaults}>\n\t\t\t{children}\n\t\t</SeoDefaultsContext.Provider>\n\t);\n};\n\nexport const useSeoDefaults = () => useContext(SeoDefaultsContext);\n","import { Card, type CardTone, Flex, Text } from \"@sanity/ui\";\nimport type { IconType } from \"react-icons/lib\";\n\nexport default function CardWithIcon({\n\ticon,\n\ttext,\n\ttone = \"nuetral\",\n}: { icon: IconType; text: string; tone?: CardTone }) {\n\tconst Icon = icon;\n\n\treturn (\n\t\t<Card marginBottom={3} tone={tone} padding={3}>\n\t\t\t<Flex gap={2} align=\"center\">\n\t\t\t\t{Icon && <Icon size={18} />}\n\t\t\t\t<Text size={1}>{text}</Text>\n\t\t\t</Flex>\n\t\t</Card>\n\t);\n}\n","import { Box, Card, Flex, Text } from \"@sanity/ui\";\nimport type { InputProps } from \"sanity\";\nimport { useSeoDefaults } from \"../../context/SeoDefaultsContext\";\nimport { MdCheck, MdWarning } from \"react-icons/md\";\nimport CardWithIcon from \"../partials/CardWithIcon\";\n\nexport default function InputWithGlobalDefault(props: InputProps) {\n\tconst { seoDefaults } = useSeoDefaults();\n\n\tconst defaultFieldName = props?.schemaType?.options?.matchingDefaultField;\n\n\tif (!defaultFieldName) {\n\t\tconsole.warn(\n\t\t\t\"No default field name found for input: \",\n\t\t\tprops?.schemaType?.name,\n\t\t);\n\t}\n\n\tconst value = props?.value;\n\tconst hasDefault = defaultFieldName ? seoDefaults?.[defaultFieldName] : false;\n\n\treturn (\n\t\t<div>\n\t\t\t{!value && !hasDefault && (\n\t\t\t\t<CardWithIcon\n\t\t\t\t\ticon={MdWarning}\n\t\t\t\t\ttone=\"critical\"\n\t\t\t\t\ttext=\"This field does not have a global default set. Make sure to fill it in here.\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{!value && hasDefault && (\n\t\t\t\t<CardWithIcon\n\t\t\t\t\ticon={MdCheck}\n\t\t\t\t\ttone=\"suggest\"\n\t\t\t\t\ttext=\"This field is using the global default.\"\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t<Box>{props.renderDefault(props)}</Box>\n\t\t</div>\n\t);\n}\n",".facebookCard {\n\tborder: 1px solid #1877f2;\n\tbackground: #fff;\n\tmax-width: 500px;\n\tmargin: 0 auto;\n\tbox-sizing: border-box;\n\tfont-family: Arial, sans-serif;\n\tpadding: 0;\n\tgap: 0;\n}\n.header {\n\tdisplay: flex;\n\tgap: 1.2rem;\n\talign-items: center;\n\tborder-bottom: 1px solid #f0f2f5;\n\tpadding-bottom: 8px;\n\tmargin-bottom: 8px;\n}\n.image {\n\twidth: 100%;\n\theight: 220px;\n\tobject-fit: cover;\n\tdisplay: block;\n\tborder-bottom: 1px solid #f0f2f5;\n\tmargin: 8px 0 12px 0;\n}\n.cardSection {\n\tmargin: 16px 0;\n}\n\n@media (max-width: 600px) {\n\t.facebookCard {\n\t\tmax-width: 99vw;\n\t}\n\t.image {\n\t\theight: 160px;\n\t}\n\t.header {\n\t\tgap: 0.6rem;\n\t}\n}\n","export function truncate(text: string | undefined, len: number) {\n\tif (!text) return \"\";\n\tif (text.length <= len) return text;\n\tlet out = text.slice(0, len);\n\tconst lastSpace = out.lastIndexOf(\" \");\n\tif (lastSpace > 40) out = out.slice(0, lastSpace);\n\treturn `${out}…`;\n}\n\nexport const concatenatePageTitle = (\n\tpageTitle: string | undefined,\n\tsiteTitle: string | undefined,\n\ttemplate: string | undefined,\n) => {\n\tif (!pageTitle) return siteTitle;\n\tif (!siteTitle) return pageTitle;\n\tif (!template) return `${pageTitle} | ${siteTitle}`;\n\treturn template\n\t\t.replace(\"{pageTitle}\", pageTitle || \"\")\n\t\t.replace(\"{siteTitle}\", siteTitle || \"\");\n};\n","import { Card } from \"@sanity/ui\";\n\nexport default function SocialCardWrapper(props: { children: React.ReactNode }) {\n\treturn <Card border={false} radius={2} tone=\"neutral\">{props.children}</Card>;\n}","import { Card, Stack, Text, Box, Avatar, Flex } from \"@sanity/ui\";\nimport styles from \"./FacebookCard.module.css\";\nimport { truncate } from \"../../../utils/string\";\nimport type { PreviewCardProps } from \"../../../types\";\nimport SocialCardWrapper from \"../../partials/SocialCardWrapper\";\n\nexport function FacebookCard(props: PreviewCardProps) {\n\tconst fallback = {\n\t\ttitle: \"My Awesome Page\",\n\t\tdescription:\n\t\t\t\"This is an engaging summary preview of your content for Facebook! Enjoy maximum clickthrough.\",\n\t\timage: \"https://placehold.co/600x315\",\n\t\tsiteUrl: \"mywebsite.com\",\n\t\tauthor: \"Your Brand\",\n\t\tavatar: \"https://placehold.co/40x40\",\n\t};\n\tconst data = { ...fallback, ...props };\n\n\treturn (\n\t\t<SocialCardWrapper>\n\t\t\t<Flex gap={2} padding={3} className={styles.header}>\n\t\t\t\t<Avatar src={data.avatar} size={3} />\n\t\t\t\t<Stack space={2}>\n\t\t\t\t\t<Text weight=\"semibold\" size={2}>\n\t\t\t\t\t\t{data.siteTitle}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Text size={1} muted>\n\t\t\t\t\t\t{data.siteUrl}\n\t\t\t\t\t</Text>\n\t\t\t\t</Stack>\n\t\t\t</Flex>\n\t\t\t<Box>\n\t\t\t\t<img className={styles.image} src={data.image} alt=\"Facebook preview\" />\n\t\t\t</Box>\n\t\t\t<Box padding={3}>\n\t\t\t\t<Stack space={3}>\n\t\t\t\t\t<Text size={1} muted>\n\t\t\t\t\t\t{data.siteUrl}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Text weight=\"semibold\" size={3}>\n\t\t\t\t\t\t{truncate(data.title, 60)}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Box marginTop={1}>\n\t\t\t\t\t\t<Text size={2}>{truncate(data.description, 110)}</Text>\n\t\t\t\t\t</Box>\n\t\t\t\t</Stack>\n\t\t\t</Box>\n\t\t</SocialCardWrapper>\n\t);\n}\n\nexport default FacebookCard;\n",".twitterCard {\n\tborder: 1px solid #1da1f2;\n\tbackground: #fff;\n\tmax-width: 500px;\n\tmargin: 0 auto;\n\tbox-sizing: border-box;\n\tfont-family: Arial, sans-serif;\n\tpadding: 0;\n}\n.userRow {\n\tdisplay: flex;\n\tgap: 1.2rem;\n\talign-items: center;\n\tpadding-bottom: 8px;\n\tmargin-bottom: 8px;\n\tborder-bottom: 1px solid #eaf5fe;\n}\n.imageLarge {\n\twidth: 100%;\n\theight: 260px;\n\tobject-fit: cover;\n\tborder-radius: 12px;\n\tmargin: 12px 0 18px 0;\n\tdisplay: block;\n}\n.cardSection {\n\tmargin: 16px 0;\n}\n\n@media (max-width: 600px) {\n\t.twitterCard {\n\t\tmax-width: 99vw;\n\t}\n\t.imageLarge {\n\t\theight: 160px;\n\t}\n\t.userRow {\n\t\tgap: 0.6rem;\n\t}\n}\n","import { Card, Stack, Text, Box, Avatar, Flex } from \"@sanity/ui\";\nimport styles from \"./TwitterCard.module.css\";\nimport { truncate } from \"../../../utils/string\";\nimport type { PreviewCardProps } from \"../../../types\";\nimport SocialCardWrapper from \"../../partials/SocialCardWrapper\";\n\nexport function TwitterCard(props: PreviewCardProps) {\n\tconst fallback = {\n\t\tsiteTitle: \"Why Static Site Generators Rock\",\n\t\tdescription:\n\t\t\t\"Exploring the benefits of JAMstack and web dev with static content. Fast, secure, scalable.\",\n\t\timage: \"https://placehold.co/800x418\",\n\t\tsiteUrl: \"mywebsite.com\",\n\t\tusername: \"@yoursite\",\n\t\tavatar: \"https://placehold.co/40x40\",\n\t};\n\tconst data = {\n\t\t...fallback,\n\t\t...props,\n\t};\n\treturn (\n\t\t<SocialCardWrapper>\n\t\t\t<Flex gap={2} padding={3} className={styles.userRow}>\n\t\t\t\t<Avatar src={data.avatar} size={3} />\n\t\t\t\t<Stack space={2}>\n\t\t\t\t\t<Text weight=\"semibold\" size={2}>\n\t\t\t\t\t\t{data.siteTitle}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Text size={1} muted>\n\t\t\t\t\t\t{data.twitterHandle}\n\t\t\t\t\t</Text>\n\t\t\t\t</Stack>\n\t\t\t</Flex>\n\t\t\t<Box>\n\t\t\t\t<img\n\t\t\t\t\tclassName={styles.imageLarge}\n\t\t\t\t\tsrc={data.image}\n\t\t\t\t\talt=\"Twitter preview\"\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t\t<Box padding={3}>\n\t\t\t\t<Flex direction=\"column\" gap={4}>\n\t\t\t\t\t<Text size={1} muted>\n\t\t\t\t\t\t{data.siteUrl}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Text weight=\"semibold\" size={3}>\n\t\t\t\t\t\t{truncate(data.title, 70)}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Text size={2}>{truncate(data.description, 120)}</Text>\n\t\t\t\t</Flex>\n\t\t\t</Box>\n\t\t</SocialCardWrapper>\n\t);\n}\n\nexport default TwitterCard;\n",".googleCard {\n\tborder: 1px solid #e1e4e8;\n\tbackground: #fff;\n\tmax-width: 550px;\n\tmargin: 0 auto 24px auto;\n\tbox-sizing: border-box;\n\tfont-family: Arial, sans-serif;\n\tpadding: 0;\n}\n.title {\n\tcolor: #1a0dab;\n\tmargin-bottom: 0.25em;\n}\n.site {\n\tcolor: #202124;\n\tfont-size: 0.97em;\n\tmargin-bottom: 0.2em;\n}\n.desc {\n\tcolor: #4d5156;\n}\n.cardSection {\n\tmargin: 16px 0;\n}\n\n@media (max-width: 600px) {\n\t.googleCard {\n\t\tmax-width: 99vw;\n\t}\n}\n","import { Card, Stack, Text, Box, Flex, Avatar } from \"@sanity/ui\";\nimport styles from \"./GoogleEntry.module.css\";\nimport { truncate } from \"../../../utils/string\";\nimport type { PreviewCardProps } from \"../../../types\";\nimport { useRootTheme } from \"@sanity/ui\";\nimport SocialCardWrapper from \"../../partials/SocialCardWrapper\";\n\nexport function GoogleEntry(props: PreviewCardProps) {\n\tconst fallback = {\n\t\ttitle: \"My Awesome Page - MyWebsite\",\n\t\tdescription:\n\t\t\t\"A compelling meta description for Google search snippet. Explain what users can find inside!\",\n\t\tsiteUrl: \"https://mywebsite.com/page\",\n\t\tfavicon: \"https://placehold.co/32x32\", // fallback favicon\n\t};\n\n\tconst data = { ...fallback, ...props };\n\tconst theme = useRootTheme();\n\n\treturn (\n\t\t<SocialCardWrapper>\n\t\t\t<Box padding={3}>\n\t\t\t\t<Stack space={3}>\n\t\t\t\t\t<Flex align=\"center\" marginBottom={2} gap={2}>\n\t\t\t\t\t\t<Avatar size={2} src={data.favicon} alt=\"Favicon\" />\n\t\t\t\t\t\t<Stack space={2}>\n\t\t\t\t\t\t\t<Text size={1} weight=\"semibold\" className={styles.site}>\n\t\t\t\t\t\t\t\t{data.siteTitle}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<Text size={1} muted className={styles.site}>\n\t\t\t\t\t\t\t\t{data.siteUrl}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Flex>\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: theme.scheme === \"light\" ? \"#1D11AC\" : \"#99C2FF\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tweight=\"medium\"\n\t\t\t\t\t\tsize={3}\n\t\t\t\t\t\tclassName={styles.title}\n\t\t\t\t\t>\n\t\t\t\t\t\t{truncate(data.title, 60)}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Text size={2} muted className={styles.desc}>\n\t\t\t\t\t\t{truncate(data.description, 155)}\n\t\t\t\t\t</Text>\n\t\t\t\t</Stack>\n\t\t\t</Box>\n\t\t</SocialCardWrapper>\n\t);\n}\n\nexport default GoogleEntry;\n","import { Box, Text } from \"@sanity/ui\";\n\nexport function PreviewGroup({\n\ttitle,\n\tchildren,\n}: { title: string; children: React.ReactNode }) {\n\treturn (\n\t\t<div>\n\t\t\t<Box marginBottom={4}>\n\t\t\t\t<Text weight=\"semibold\" size={2}>\n\t\t\t\t\t{title}\n\t\t\t\t</Text>\n\t\t\t</Box>\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n","import { Button, type ButtonProps, Flex, Text } from \"@sanity/ui\";\nimport type { IconType } from \"react-icons/lib\";\n\nexport default function ButtonWithIcon({\n\ticon,\n\tbuttonProps = {},\n\tlabel,\n}: { icon: IconType; buttonProps?: ButtonProps; label: string }) {\n\tconst Icon = icon;\n\n\treturn (\n\t\t<Button {...buttonProps}>\n\t\t\t<Flex gap={2} align=\"center\" justify=\"center\">\n\t\t\t\t{Icon && <Icon size={17} />}\n\n\t\t\t\t<Text size={1} weight=\"semibold\">\n\t\t\t\t\t{label}\n\t\t\t\t</Text>\n\t\t\t</Flex>\n\t\t</Button>\n\t);\n}\n","import { Button, Flex, Box, Text } from \"@sanity/ui\";\nimport { useEffect, useState } from \"react\";\nimport { MdEdit, MdPreview } from \"react-icons/md\";\nimport { useClient, useFormValue, type ObjectInputProps } from \"sanity\";\nimport FacebookCard from \"../../socials/facebook/FacebookCard\";\nimport TwitterCard from \"../../socials/twitter/TwitterCard\";\nimport GoogleEntry from \"../../socials/google/GoogleEntry\";\nimport { PreviewGroup } from \"./PreviewGroup\";\nimport { concatenatePageTitle } from \"../../../utils/string\";\nimport ButtonWithIcon from \"../../partials/ButtonWithIcon\";\n\nconst PREVIEW_GROUPS = [\n\t{\n\t\tname: \"Facebook\",\n\t\tcomponent: FacebookCard,\n\t\ttitle: \"Facebook\",\n\t},\n\t{\n\t\tname: \"Twitter / X\",\n\t\tcomponent: TwitterCard,\n\t\ttitle: \"Twitter\",\n\t},\n\t{\n\t\tname: \"Google\",\n\t\tcomponent: GoogleEntry,\n\t\ttitle: \"Google\",\n\t},\n];\n\nexport default function PageSeoInput(props: ObjectInputProps) {\n\tconst client = useClient({ apiVersion: \"2025-01-11\" });\n\tconst MODES = [\n\t\t{ name: \"fields\", title: \"Fields\", icon: MdEdit },\n\t\t{ name: \"preview\", title: \"Preview\", icon: MdPreview },\n\t];\n\n\ttype SeoInputMode = (typeof MODES)[number];\n\n\tconst [currentMode, setCurrentMode] = useState<SeoInputMode[\"name\"]>(\n\t\tMODES[0]?.name,\n\t);\n\tconst [seoDefaults, setSeoDefaults] = useState<any>(null);\n\n\tuseEffect(() => {\n\t\tclient.fetch(`*[_type == \"seoDefaults\"][0]`).then(setSeoDefaults);\n\t}, [client]);\n\n\tconst document = useFormValue([]) || {};\n\n\tconst seoData = {\n\t\t...(seoDefaults || {}),\n\t\t...(props.value || {}),\n\t\ttitle: concatenatePageTitle(\n\t\t\tdocument?.title,\n\t\t\tseoDefaults?.siteTitle,\n\t\t\tseoDefaults?.pageTitleTemplate,\n\t\t),\n\t\t// merge description or other fields as needed\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Box marginBottom={4} width=\"fill\">\n\t\t\t\t<Flex gap={2} width=\"fill\">\n\t\t\t\t\t{MODES.map((m: SeoInputMode) => (\n\t\t\t\t\t\t<ButtonWithIcon\n\t\t\t\t\t\t\tkey={m.name}\n\t\t\t\t\t\t\tbuttonProps={{\n\t\t\t\t\t\t\t\tpadding: 2,\n\t\t\t\t\t\t\t\twidth: \"fill\",\n\t\t\t\t\t\t\t\tmode: m.name === currentMode ? \"default\" : \"ghost\",\n\t\t\t\t\t\t\t\tonClick: () => setCurrentMode(m.name),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabel={m.title}\n\t\t\t\t\t\t\ticon={m.icon}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</Flex>\n\t\t\t</Box>\n\n\t\t\t{currentMode === \"fields\" && props.renderDefault(props)}\n\t\t\t{currentMode === \"preview\" && (\n\t\t\t\t<Flex gap={6} marginTop={6} direction=\"column\">\n\t\t\t\t\t{PREVIEW_GROUPS.map((group) => (\n\t\t\t\t\t\t<PreviewGroup key={group.name} title={group.title}>\n\t\t\t\t\t\t\t<group.component {...seoData} />\n\t\t\t\t\t\t</PreviewGroup>\n\t\t\t\t\t))}\n\t\t\t\t</Flex>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import InputWithGlobalDefault from \"../../../components/core/InputWithGlobalDefault\";\nimport PageSeoInput from \"../../../components/core/PageSeoInput/PageSeoInput\";\n\nexport default {\n\tname: \"metadata\",\n\ttitle: \"Metadata\",\n\tgroup: \"seo\",\n\tcomponents: {\n\t\tinput: PageSeoInput,\n\t},\n\ttype: \"object\",\n\tfields: [\n\t\t{\n\t\t\tname: \"description\",\n\t\t\ttitle: \"Meta Description\",\n\t\t\tcomponents: {\n\t\t\t\tinput: InputWithGlobalDefault,\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tmatchingDefaultField: \"metaDescription\",\n\t\t\t},\n\t\t\ttype: \"text\",\n\t\t\trows: 3,\n\t\t\tdescription:\n\t\t\t\t\"The description displayed when a user finds the site in search results. Defaults to the description provided in Settings > SEO.\",\n\t\t\tvalidation: (Rule) =>\n\t\t\t\tRule.max(160).warning(\n\t\t\t\t\t\"Long titles (over 160 characters) will be truncated by Google.\",\n\t\t\t\t),\n\t\t},\n\t\t{\n\t\t\tname: \"searchVisibility\",\n\t\t\ttype: \"searchVisibility\",\n\t\t},\n\t\t{\n\t\t\tname: \"canonicalUrl\",\n\t\t\ttitle: \"Canonical URL\",\n\t\t\ttype: \"url\",\n\t\t\tdescription:\n\t\t\t\t\"If this webpage has multiple URLs, specify the primary canonical URL that Google should index here\",\n\t\t},\n\t\t{\n\t\t\tname: \"metaImage\",\n\t\t\tcomponents: {\n\t\t\t\tinput: InputWithGlobalDefault,\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tmatchingDefaultField: \"metaImage\",\n\t\t\t},\n\t\t\ttitle: \"Meta Image\",\n\t\t\tdescription:\n\t\t\t\t\"Displayed when the site link is posted on social media, defaults to a screenshot of the homepage.\",\n\t\t\ttype: \"imageAlt\",\n\t\t},\n\t],\n};\n","import type { SchemaMarkupType } from \"../types\";\n\n/**\n * Common keys you might conditionally show at the top-level of your `jsonld` field.\n * (These are the generic, cross-entity fields you added like name, description, inLanguage, image, etc.)\n */\ntype CommonKey = \"name\" | \"description\" | \"inLanguage\" | \"image\";\n\n/**\n * Map: for each JSON-LD type, which common keys make sense to show.\n * Tweak freely for your project.\n */\nconst COMMON_BY_TYPE: Record<SchemaMarkupType, ReadonlySet<CommonKey>> = {\n\tWebSite: new Set<CommonKey>([\"name\", \"inLanguage\", \"image\"]),\n\tWebPage: new Set<CommonKey>([\"name\", \"description\", \"inLanguage\", \"image\"]),\n\tArticle: new Set<CommonKey>([\"name\", \"description\", \"inLanguage\", \"image\"]),\n\tProduct: new Set<CommonKey>([\"name\", \"description\", \"image\"]),\n\tEvent: new Set<CommonKey>([\"name\", \"description\", \"image\"]),\n\tFAQPage: new Set<CommonKey>([\"name\", \"description\"]), // often driven by mainEntity; keep minimal here\n\tBreadcrumbList: new Set<CommonKey>([]), // all data lives in itemListElement\n\tOrganization: new Set<CommonKey>([\"name\", \"image\"]), // url lives in the entity group\n\tPerson: new Set<CommonKey>([\"name\", \"image\"]),\n\tLocalBusiness: new Set<CommonKey>([\"name\", \"description\", \"image\"]),\n};\n\n/**\n * Returns true if a common field should be visible for the selected JSON-LD type.\n * Use it in Sanity field `hidden` callbacks: hidden: ({parent}) => !needs(parent, 'image')\n */\nexport function needs(\n\tparent: { type?: SchemaMarkupType } | undefined,\n\tkey: CommonKey,\n): boolean {\n\tconst t = parent?.type;\n\tif (!t) return false;\n\tconst set = COMMON_BY_TYPE[t];\n\treturn set ? set.has(key) : false;\n}\n\n/* -------- Optional: “required” helper (if you want stricter UX) -------- */\n\n// Keys that you consider required by type (for inline validation hints, badges, etc.)\nconst REQUIRED_BY_TYPE: Partial<\n\tRecord<SchemaMarkupType, ReadonlySet<CommonKey>>\n> = {\n\tWebSite: new Set<CommonKey>([\"name\"]),\n\tWebPage: new Set<CommonKey>([\"name\"]),\n\tArticle: new Set<CommonKey>([\"name\"]),\n\tProduct: new Set<CommonKey>([\"name\"]),\n\tEvent: new Set<CommonKey>([\"name\"]),\n\t// others optional by default\n};\n\nexport function isRequired(\n\tparent: { type?: SchemaMarkupType } | undefined,\n\tkey: CommonKey,\n): boolean {\n\tconst t = parent?.type;\n\tif (!t) return false;\n\tconst set = REQUIRED_BY_TYPE[t];\n\treturn set ? set.has(key) : false;\n}\n\n/* -------- Usage in your schema --------\ndefineField({\n  name: 'name',\n  type: 'string',\n  hidden: ({parent}) => !needs(parent, 'name'),\n  validation: Rule => Rule.custom((_val, ctx) => {\n    return isRequired(ctx.parent as any, 'name') ? !!_val || 'Required' : true;\n  })\n});\n*/\n","import type { ObjectInputProps } from \"sanity\";\n\nexport default function PageSchemaMarkupInput(props: ObjectInputProps) {\n\treturn <div>{props.renderDefault(props)}</div>;\n}\n","import { Box, Button, Flex, Grid, Text, useToast } from \"@sanity/ui\";\nimport { set } from \"sanity\";\nimport ButtonWithIcon from \"../../partials/ButtonWithIcon\";\n\nexport default function ButtonSelector(props) {\n\tconst toast = useToast();\n\n\tconst {\n\t\telementProps: { id, onBlur, onFocus, placeholder, readOnly, ref, value },\n\t\tonChange,\n\t\tschemaType,\n\t\tvalidation,\n\t\t// value = '',\n\t} = props;\n\n\tconst options = schemaType.options.list;\n\n\tconst handleChange = (option: string) => {\n\t\tconsole.log(option);\n\t\tonChange(set(option));\n\t};\n\n\tconst c = (c: string) => {\n\t\tc = c?.replaceAll(\"#\", \"\")?.toLowerCase().trim();\n\t\treturn c;\n\t};\n\n\treturn (\n\t\t<Box>\n\t\t\t<Grid columns={3} gap={3}>\n\t\t\t\t{options.map((option, index) => {\n\t\t\t\t\tconst { title, value, icon, color } = option;\n\n\t\t\t\t\tconst Icon = icon;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ButtonWithIcon\n\t\t\t\t\t\t\tkey={value}\n\t\t\t\t\t\t\tbuttonProps={{\n\t\t\t\t\t\t\t\tpaddingY: 4,\n\t\t\t\t\t\t\t\tmode: c(props?.value) === c(value) ? \"default\" : \"ghost\",\n\t\t\t\t\t\t\t\tonClick: () => handleChange(value),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabel={title}\n\t\t\t\t\t\t\ticon={icon}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n}\n","import {\n\tMdArticle,\n\tMdBusiness,\n\tMdEvent,\n\tMdPageview,\n\tMdQuestionAnswer,\n\tMdShoppingBag,\n\tMdWeb,\n\tMdPerson,\n\tMdStore,\n\tMdCreate,\n\tMdPeople,\n\tMdEmail,\n} from \"react-icons/md\";\n\nexport const SCHEMA_MARKUP_TYPES = {\n\tAboutPage: { title: \"AboutPage\", value: \"AboutPage\", icon: MdPeople },\n\tContactPage: { title: \"ContactPage\", value: \"ContactPage\", icon: MdEmail },\n\tArticle: { title: \"Article\", value: \"Article\", icon: MdArticle },\n\tCreativeWork: {\n\t\ttitle: \"CreativeWork\",\n\t\tvalue: \"CreativeWork\",\n\t\ticon: MdCreate,\n\t},\n\tEvent: { title: \"Event\", value: \"Event\", icon: MdEvent },\n\tFAQPage: { title: \"FAQPage\", value: \"FAQPage\", icon: MdQuestionAnswer },\n\t// BreadcrumbList: { title: \"BreadcrumbList\", value: \"BreadcrumbList\" },\n\tLocalBusiness: {\n\t\ttitle: \"LocalBusiness\",\n\t\tvalue: \"LocalBusiness\",\n\t\ticon: MdStore,\n\t},\n\tOrganization: {\n\t\ttitle: \"Organization\",\n\t\tvalue: \"Organization\",\n\t\ticon: MdBusiness,\n\t},\n\tPerson: { title: \"Person\", value: \"Person\", icon: MdPerson },\n\tProduct: { title: \"Product\", value: \"Product\", icon: MdShoppingBag },\n\tWebPage: { title: \"WebPage\", value: \"WebPage\", icon: MdPageview },\n\tWebSite: { title: \"WebSite\", value: \"WebSite\", icon: MdWeb },\n};\n\n","// src/schema/field.ts\nimport { defineType, defineField } from \"sanity\";\nimport { needs } from \"../../../utils/needs\";\nimport PageSchemaMarkupInput from \"../../../components/core/PageSchemaMarkupInput/PageSchemaMarkupInput\";\nimport ButtonSelector from \"../../../../../../components/ButtonSelector\";\nimport {\n\tMdArticle,\n\tMdBusiness,\n\tMdEvent,\n\tMdPageview,\n\tMdQuestionAnswer,\n\tMdShoppingBag,\n\tMdWeb,\n\tMdPerson,\n\tMdStore,\n} from \"react-icons/md\";\nimport SchemaMarkupTypeSelector from \"../../../components/core/PageSchemaMarkupInput/SchemaMarkupTypeSelector\";\nimport { SCHEMA_MARKUP_TYPES } from \"../../../globals\";\n\nexport const schemaMarkup = defineType({\n\tname: \"schemaMarkup\",\n\ttitle: \"Schema Markup\",\n\tcomponents: {\n\t\tinput: PageSchemaMarkupInput,\n\t},\n\ttype: \"object\",\n\tfields: [\n\t\tdefineField({\n\t\t\tname: \"type\",\n\t\t\ttitle: \"Schema Type\",\n\t\t\ttype: \"string\",\n\t\t\tcomponents: {\n\t\t\t\tinput: SchemaMarkupTypeSelector,\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tlist: [...Object.values(SCHEMA_MARKUP_TYPES)],\n\t\t\t\tlayout: \"radio\",\n\t\t\t},\n\t\t\tvalidation: (Rule) => Rule.required(),\n\t\t}),\n\t\t// Minimal common fields:\n\t\tdefineField({\n\t\t\tname: \"name\",\n\t\t\ttype: \"string\",\n\t\t\thidden: ({ parent }) => !needs(parent, \"name\"),\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"description\",\n\t\t\ttype: \"text\",\n\t\t\trows: 3,\n\t\t\thidden: ({ parent }) => !needs(parent, \"description\"),\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"inLanguage\",\n\t\t\ttype: \"string\",\n\t\t\thidden: ({ parent }) => !needs(parent, \"inLanguage\"),\n\t\t}),\n\t\t// defineField({\n\t\t// \tname: \"image\",\n\t\t// \ttype: \"jsonldImageObject\",\n\t\t// \thidden: ({ parent }) => !needs(parent, \"image\"),\n\t\t// }),\n\t\t// Type-specific groups (conditionally shown)\n\t\t// e.g., Article\n\t\tdefineField({\n\t\t\tname: \"article\",\n\t\t\ttype: \"schemaMarkupArticleFields\",\n\t\t\thidden: ({ parent }) => parent?.type !== \"Article\",\n\t\t}),\n\t\t// Product\n\t\tdefineField({\n\t\t\tname: \"product\",\n\t\t\ttype: \"schemaMarkupProductFields\",\n\t\t\thidden: ({ parent }) => parent?.type !== \"Product\",\n\t\t}),\n\t\t// ...repeat for Event, FAQPage, BreadcrumbList, etc.\n\t],\n\t// components: { input: JsonLdInput }, // custom UI that merges defaults + shows preview\n\tpreview: { select: { title: \"type\", subtitle: \"name\" } },\n});\n","import type { ObjectInputProps } from \"sanity\";\nimport { set } from \"sanity\";\nimport { Button, Flex, Text, Card, Box, Stack } from \"@sanity/ui\";\nimport { useCallback } from \"react\";\nimport { CardWithIcon } from \"../partials\";\nimport { MdInfo, MdPlaylistRemove } from \"react-icons/md\";\nimport { IoArrowRedo } from \"react-icons/io5\";\n\n// Helper to extract and set nested field values\nfunction getNested(obj: Record<string, any>, key: string) {\n\treturn obj && Object.prototype.hasOwnProperty.call(obj, key)\n\t\t? obj[key]\n\t\t: undefined;\n}\n\nexport default function IndexingControls(props: ObjectInputProps) {\n\tconst { value = {}, onChange } = props;\n\n\tconst noFollow = !!getNested(value, \"noFollow\");\n\tconst noIndex = !!getNested(value, \"noIndex\");\n\n\tconst setValue = useCallback(\n\t\t(key: \"noFollow\" | \"noIndex\", val: boolean) => {\n\t\t\tonChange?.(set(val, [key]));\n\t\t},\n\t\t[onChange],\n\t);\n\n\tlet note = \"\";\n\tif (!noIndex && !noFollow) {\n\t\tnote =\n\t\t\t\"This page will be indexed by search engines, and links on this page will be crawled and considered for ranking.\";\n\t} else if (!noIndex && noFollow) {\n\t\tnote =\n\t\t\t\"This page will be indexed by search engines, but links on this page will not be crawled or considered for ranking.\";\n\t} else if (noIndex && !noFollow) {\n\t\tnote =\n\t\t\t\"This page will not be indexed by search engines, but links on this page will be crawled and considered for ranking.\";\n\t} else if (noIndex && noFollow) {\n\t\tnote =\n\t\t\t\"This page will not be indexed by search engines, and links on this page will not be crawled or considered for ranking.\";\n\t}\n\n\treturn (\n\t\t<Stack space={3}>\n\t\t\t<CardWithIcon\n\t\t\t\ticon={MdInfo}\n\t\t\t\ttone={noIndex && noFollow ? \"critical\" : \"suggest\"}\n\t\t\t\ttext={note}\n\t\t\t/>\n\t\t\t<Flex gap={3}>\n\t\t\t\t<Button\n\t\t\t\t\twidth=\"fill\"\n\t\t\t\t\ticon={IoArrowRedo}\n\t\t\t\t\tmode={noFollow ? \"default\" : \"ghost\"}\n\t\t\t\t\tselected={noFollow}\n\t\t\t\t\ttext=\"No Follow\"\n\t\t\t\t\ttone={noFollow ? \"critical\" : \"default\"}\n\t\t\t\t\tonClick={() => setValue(\"noFollow\", !noFollow)}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\twidth=\"fill\"\n\t\t\t\t\ticon={MdPlaylistRemove}\n\t\t\t\t\tmode={noIndex ? \"default\" : \"ghost\"}\n\t\t\t\t\tselected={noIndex}\n\t\t\t\t\ttext=\"No Index\"\n\t\t\t\t\ttone={noIndex ? \"critical\" : \"default\"}\n\t\t\t\t\tonClick={() => setValue(\"noIndex\", !noIndex)}\n\t\t\t\t/>\n\t\t\t</Flex>\n\t\t</Stack>\n\t);\n}\n","import type { LayoutProps } from \"sanity\";\nimport { SeoDefaultsProvider } from \"../../context/SeoDefaultsContext\";\n\nexport default function SeoLayoutWrapper(props: LayoutProps) {\n\treturn (\n\t\t<SeoDefaultsProvider>{props.renderDefault(props)}</SeoDefaultsProvider>\n\t);\n}\n","import { defineField } from \"sanity\";\nimport { IndexingControls } from \"../../../components/core\";\n\n\nexport default defineField({\n\tname: \"searchVisibility\",\n\ttitle: \"Search Visibility\",\n\ttype: \"object\",\n\tcomponents: {\n\t\tinput: IndexingControls,\n\t},\n\tfields: [\n\t\t{\n\t\t\tname: \"noFollow\",\n\t\t\ttitle: \"No Follow\",\n\t\t\ttype: \"boolean\",\n\t\t},\n\t\t{\n\t\t\tname: \"noIndex\",\n\t\t\ttitle: \"No Index\",\n\t\t\ttype: \"boolean\",\n\t\t},\n\t],\n});\n","import { Flex } from \"@sanity/ui\";\n\nexport default function WindowControls() {\n\tconst CONTROLS = [\n\t\t{ bg: \"#ff5f57\", title: \"Close\" },\n\t\t{ bg: \"#ffbd2e\", title: \"Minimize\" },\n\t\t{ bg: \"#28c940\", title: \"Maximize\" },\n\t];\n\n\treturn (\n\t\t<Flex\n\t\t\talign=\"center\"\n\t\t\tstyle={{\n\t\t\t\tgap: 6,\n\n\t\t\t\tpaddingRight: 16,\n\t\t\t}}\n\t\t>\n\t\t\t{CONTROLS.map((c, i) => (\n\t\t\t\t<span\n\t\t\t\t\tkey={i}\n\t\t\t\t\ttitle={c.title}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tdisplay: \"inline-block\",\n\t\t\t\t\t\twidth: 11,\n\t\t\t\t\t\theight: 11,\n\t\t\t\t\t\tborderRadius: \"50%\",\n\t\t\t\t\t\tbackground: c.bg,\n\t\t\t\t\t\tborder: \"0.5px solid #bfbfbf\",\n\t\t\t\t\t\tboxSizing: \"border-box\",\n\t\t\t\t\t\tboxShadow:\n\t\t\t\t\t\t\ti === 0\n\t\t\t\t\t\t\t\t? \"0 0.5px 0.5px #c14545\"\n\t\t\t\t\t\t\t\t: i === 2\n\t\t\t\t\t\t\t\t\t? \"0 0.5px 0.5px #30993d\"\n\t\t\t\t\t\t\t\t\t: \"0 0.5px 0.5px #bfa350\",\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</Flex>\n\t);\n}\n",".card {\n\t&[data-theme=\"dark\"] {\n\t\t--card-bg: #22242a;\n\t\t--tab-bg: #22242a;\n\t\t--tab-shadow: 0px 1.5px 3px 0px #181a1f, 0px 0.5px 0.5px 0.2px #23272b;\n\t\t--tab-border: 1.5px solid #32353b;\n\t\t--tab-favicon-bg: #22242a;\n\t\t--tab-favicon-border: 1px solid #44464a;\n\t\t--tab-url-text-color: #e1e6f0;\n\t}\n\t&[data-theme=\"light\"] {\n\t\t--card-bg: #fff;\n\t\t--tab-bg: #fff;\n\t\t--tab-shadow: 0px 1.5px 3px 0px #ececec, 0px 0.5px 0.5px 0.2px #d4d9db;\n\t\t--tab-border: 1.5px solid #e7ebed;\n\t\t--tab-favicon-bg: #fff;\n\t\t--tab-favicon-border: 1px solid #e5e5e5;\n\t\t--tab-url-text-color: #242629;\n\t}\n\n\t& [data-tab-display] {\n\t\tbackground: var(--tab-bg);\n\t\tfont-family: \"system-ui\", \"-apple-system\", \"BlinkMacSystemFont\", \"Segoe UI\",\n\t\t\t\"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\n\t\t\t\"Helvetica Neue\", sans-serif;\n\t}\n}\n\n.image-preview {\n\timg {\n\t\tbackground: #ececec !important;\n\t}\n}\n","import { Box, Flex, Text, useRootTheme } from \"@sanity/ui\";\nimport styles from \"./favicon-preview.module.css\";\n\nexport default function BrowserTab({\n\turl = \"https://example.com\",\n\tfavicon = \"https://upload.wikimedia.org/wikipedia/commons/b/b8/2021_Facebook_icon.svg\",\n\ttitle = \"Facebook\",\n}: { url?: string | null; favicon?: string | null; title?: string | null }) {\n\tconst theme = useRootTheme();\n\n\treturn (\n\t\t<Flex\n\t\t\tgap={2}\n\t\t\tdata-theme={theme.scheme}\n\t\t\tclassName={styles.card}\n\t\t\tstyle={{\n\t\t\t\tborderRadius: \"10px 10px 0 0\",\n\t\t\t\tbackground: \"var(--tab-bg)\",\n\t\t\t\tboxShadow: \"var(--tab-shadow)\",\n\t\t\t\tmaxWidth: 220,\n\t\t\t\tminWidth: 140,\n\t\t\t\theight: 36,\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\talignItems: \"center\",\n\t\t\t\tpadding: \"0 16px\",\n\t\t\t\tborder: \"var(--tab-border)\",\n\t\t\t\tborderBottom: \"none\",\n\t\t\t}}\n\t\t>\n\t\t\t<img\n\t\t\t\tsrc={favicon}\n\t\t\t\twidth={16}\n\t\t\t\theight={16}\n\t\t\t\talt=\"Favicon on tab\"\n\t\t\t\tstyle={{\n\t\t\t\t\tborderRadius: 4,\n\t\t\t\t\tbackground: \"var(--tab-favicon-bg)\",\n\t\t\t\t\tdisplay: \"block\",\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Flex direction=\"column\" justify=\"center\" align=\"center\">\n\t\t\t\t<Text\n\t\t\t\t\tsize={1}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tfontWeight: 500,\n\t\t\t\t\t\tcolor: \"var(--tab-url-text-color)\",\n\t\t\t\t\t\topacity: 0.93,\n\t\t\t\t\t\theight: \"100%\",\n\t\t\t\t\t\twhiteSpace: \"nowrap\",\n\t\t\t\t\t\ttextOverflow: \"ellipsis\",\n\t\t\t\t\t\tuserSelect: \"none\",\n\t\t\t\t\t\tfontFamily: \"inherit\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{title}\n\t\t\t\t</Text>\n\t\t\t</Flex>\n\t\t</Flex>\n\t);\n}\n","import { Box, Card, Flex, Text, useRootTheme } from \"@sanity/ui\";\nimport type { ImageInputProps } from \"sanity\";\nimport { useSeoDefaults } from \"../../../context/SeoDefaultsContext\";\nimport { useMemo } from \"react\";\nimport WindowControls from \"./WindowControls\";\nimport BrowserTab from \"./BrowserTab\";\nimport styles from \"./favicon-preview.module.css\";\nimport { buildSrc } from \"@sanity-image/url-builder\";\nimport { useDataset, useProjectId } from \"sanity\";\n\nexport default function FaviconPreview(props: ImageInputProps) {\n\tconst defaults = useSeoDefaults();\n\tconst theme = useRootTheme();\n\tconst dataset = useDataset();\n\tconst projectId = useProjectId();\n\n\tconst url = useMemo(() => {\n\t\tconst domain = defaults?.siteUrl ? defaults.siteUrl : \"https://example.com\";\n\t\treturn domain.replace(\"https://\", \"\");\n\t}, [defaults]);\n\n\tconst faviconUrl = useMemo(() => {\n\t\treturn props.value?.asset?._ref\n\t\t\t? buildSrc({\n\t\t\t\t\tid: props.value?.asset?._ref,\n\t\t\t\t\tbaseUrl: `https://cdn.sanity.io/images/${projectId}/${dataset}/`,\n\t\t\t\t})?.src\n\t\t\t: null;\n\t}, [props.value?.asset?._ref, projectId, dataset]);\n\n\treturn (\n\t\t<div className={styles.card}>\n\t\t\t<Card\n\t\t\t\tdata-tab-display\n\t\t\t\tdata-theme={theme.scheme}\n\t\t\t\tshadow={2}\n\t\t\t\tmarginBottom={2}\n\t\t\t\tradius={4}\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Flex paddingX={4} paddingY={2} justify=\"start\" align=\"center\">\n\t\t\t\t\t<WindowControls />\n\t\t\t\t\t<BrowserTab\n\t\t\t\t\t\turl={url}\n\t\t\t\t\t\ttitle={defaults?.siteTitle}\n\t\t\t\t\t\tfavicon={faviconUrl}\n\t\t\t\t\t/>\n\t\t\t\t\t<BrowserTab />\n\t\t\t\t</Flex>\n\t\t\t</Card>\n\t\t\t<Box className={styles?.[\"image-preview\"]}>\n\t\t\t\t{props.renderDefault(props)}\n\t\t\t</Box>\n\t\t</div>\n\t);\n}\n","import { defineField } from \"sanity\";\nimport FaviconPreview from \"../../../components/core/Favicon/FaviconPreview\";\n\nexport default defineField({\n\tname: \"favicon\",\n\ttype: \"image\",\n\tcomponents: {\n\t\tinput: FaviconPreview,\n\t},\n\tdescription:\n\t\t\"The favicon of the site. To create the sharpest fallback images possible, use an SVG. Careful with transparent backgrounds, a user might have light or dark mode enabled.\",\n\tgroup: \"metadata\",\n});\n","import { schemaMarkupAddress } from \"./schema-markup/address\";\nimport { schemaMarkupAggregateRating } from \"./schema-markup/aggregate-rating\";\nimport { schemaMarkupGeo } from \"./schema-markup/geo\";\nimport metaDescription from \"./metadata/meta-description\";\nimport metadata from \"./metadata/page-metadata\";\nimport { schemaMarkup } from \"./schema-markup/schemaMarkup\";\nimport indexing from \"./metadata/indexing\";\nimport favicon from \"./metadata/favicon\";\n\nexport default [\n\tindexing,\n\tfavicon,\n\tschemaMarkupAddress,\n\tschemaMarkupGeo,\n\tschemaMarkupAggregateRating,\n\tschemaMarkup,\n\tmetadata,\n\tmetaDescription,\n];\n","import { AiOutlineGlobal } from \"react-icons/ai\";\nimport { MdSettingsSuggest } from \"react-icons/md\";\nimport { defineType, defineField } from \"sanity\";\nimport { IoSparklesSharp } from \"react-icons/io5\";\n\nexport const schemaMarkupDefaults = defineType({\n\tname: \"schemaMarkupDefaults\",\n\ttitle: \"Schema Markup Defaults\",\n\ttype: \"document\",\n\tgroups: [\n\t\t{\n\t\t\tname: \"global\",\n\t\t\ttitle: \"Global Defaults\",\n\t\t\tdefault: true,\n\t\t\ticon: AiOutlineGlobal,\n\t\t},\n\t\t{\n\t\t\tname: \"automapping\",\n\t\t\ttitle: \"Automapping\",\n\t\t\ticon: IoSparklesSharp,\n\t\t},\n\t\t{\n\t\t\tname: \"type-specific\",\n\t\t\ttitle: \"Type-Specific Defaults\",\n\t\t\ticon: MdSettingsSuggest,\n\t\t},\n\t],\n\t// mark as singleton in your desk (see snippet below)\n\tfields: [\n\t\t// IN OTHER PLACE ALREADY\n\t\t// ---- General ----\n\t\t// defineField({\n\t\t// \tname: \"baseUrl\",\n\t\t// \ttitle: \"Base URL\",\n\t\t// \ttype: \"url\",\n\t\t// \tdescription: \"Root URL used to build canonical links in JSON-LD.\",\n\t\t// \tvalidation: (r) => r.required(),\n\t\t// }),\n\t\t// defineField({\n\t\t// \tname: \"defaultLocale\",\n\t\t// \ttitle: \"Default Locale\",\n\t\t// \ttype: \"string\",\n\t\t// \tdescription: \"2-letter language code (e.g., en, it, de).\",\n\t\t// \tvalidation: (r) => r.required().max(2),\n\t\t// }),\n\n\t\t// GETTING THESE FROM CODEBASE, NOT CMS\n\t\t// defineField({\n\t\t// \tname: \"locales\",\n\t\t// \ttitle: \"Available Locales\",\n\t\t// \ttype: \"array\",\n\t\t// \tof: [{ type: \"string\" }],\n\t\t// \tdescription:\n\t\t// \t\t\"List of supported locales. First should match defaultLocale.\",\n\t\t// \tvalidation: (r) => r.min(1),\n\t\t// }),\n\t\tdefineField({\n\t\t\tname: \"sameAs\",\n\t\t\ttitle: \"Global Profiles (sameAs)\",\n\t\t\ttype: \"array\",\n\t\t\tgroup: \"global\",\n\t\t\tof: [{ type: \"url\" }],\n\t\t\tdescription: \"Social/profile URLs applied when relevant.\",\n\t\t}),\n\n\t\tdefineField({\n\t\t\tname: \"organization\",\n\t\t\ttitle: \"Default Organization\",\n\t\t\tgroup: \"global\",\n\t\t\ttype: \"reference\",\n\t\t\tto: [{ type: \"schemaMarkupOrganization\" }],\n\t\t\tdescription: \"Used as publisher/brand when none specified.\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"publisher\",\n\t\t\ttitle: \"Default Publisher (Overrides Organization)\",\n\t\t\tgroup: \"global\",\n\t\t\ttype: \"reference\",\n\t\t\tto: [{ type: \"schemaMarkupOrganization\" }],\n\t\t}),\n\n\t\t// ---- Image & Media Fallbacks ----\n\t\tdefineField({\n\t\t\tname: \"logo\",\n\t\t\ttitle: \"Global Logo\",\n\t\t\tgroup: \"global\",\n\t\t\ttype: \"image\",\n\t\t\tdescription:\n\t\t\t\t\"Default logo used for Organization and WebSite schemas when no specific logo is provided.\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"imageFallback\",\n\t\t\ttitle: \"Default Image\",\n\t\t\tgroup: \"global\",\n\t\t\ttype: \"image\",\n\t\t\tdescription: \"Used if an entity has no image set or auto-mapped.\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"imageFieldMapping\",\n\t\t\thidden: true,\n\t\t\ttitle: \"Image Auto-Map Order\",\n\t\t\tgroup: \"global\",\n\t\t\ttype: \"array\",\n\t\t\tof: [{ type: \"string\" }],\n\t\t\tdescription:\n\t\t\t\t\"Field paths (dot notation) searched on the document to auto-map an image. First match wins. Example: coverImage, seo.image, ogImage\",\n\t\t\toptions: { layout: \"tags\" },\n\t\t\tinitialValue: [\"coverImage\", \"seo.image\", \"ogImage\", \"mainImage\"],\n\t\t}),\n\n\t\t// ---- Auto-Mapping Toggles ----\n\t\tdefineField({\n\t\t\tname: \"autoMap\",\n\t\t\ttitle: \"Automatic Field Mapping\",\n\t\t\tgroup: \"automapping\",\n\t\t\ttype: \"object\",\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tname: \"title\",\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tinitialValue: true,\n\t\t\t\t\tdescription: \"Map doc title → name/headline.\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"description\",\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tinitialValue: true,\n\t\t\t\t\tdescription: \"Map doc excerpt/description → description.\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"image\",\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tinitialValue: true,\n\t\t\t\t\tdescription: \"Use imageFieldMapping to find an image.\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"dates\",\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tinitialValue: true,\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t\"Map publishedAt/updatedAt → datePublished/dateModified.\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"authors\",\n\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\tinitialValue: true,\n\t\t\t\t\tdescription: \"Map authors[] → Person/Organization authors.\",\n\t\t\t\t},\n\t\t\t],\n\t\t}),\n\n\t\t// ---- Type-Specific Defaults ----\n\t\tdefineField({\n\t\t\tname: \"webSite\",\n\t\t\ttitle: \"WebSite Defaults\",\n\t\t\tgroup: \"type-specific\",\n\t\t\ttype: \"object\",\n\t\t\toptions: { collapsible: true, collapsed: true },\n\t\t\tfields: [\n\t\t\t\t// { name: \"name\", type: \"string\" },\n\t\t\t\t// {\n\t\t\t\t// \tname: \"inLanguage\",\n\t\t\t\t// \ttype: \"string\",\n\t\t\t\t// \tdescription: \"BCP-47 code. Fallback to defaultLocale.\",\n\t\t\t\t// },\n\t\t\t\t{ name: \"publisher\", type: \"schemaMarkupOrganization\" },\n\t\t\t\tdefineField({\n\t\t\t\t\tname: \"searchAction\",\n\t\t\t\t\ttitle: \"SearchAction\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"target\",\n\t\t\t\t\t\t\ttype: \"url\",\n\t\t\t\t\t\t\tdescription:\n\t\t\t\t\t\t\t\t\"e.g. https://example.com/search?q={search_term_string}\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"queryInput\",\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\tdescription: \"e.g. required name=search_term_string\",\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}),\n\t\t\t],\n\t\t}),\n\n\t\tdefineField({\n\t\t\tname: \"webPage\",\n\t\t\ttitle: \"WebPage Defaults\",\n\t\t\tgroup: \"type-specific\",\n\t\t\ttype: \"object\",\n\t\t\toptions: { collapsible: true, collapsed: true },\n\t\t\tfields: [\n\t\t\t\t{ name: \"inLanguage\", type: \"string\" },\n\t\t\t\t{ name: \"primaryImageOfPage\", type: \"image\" },\n\t\t\t],\n\t\t}),\n\n\t\tdefineField({\n\t\t\tname: \"article\",\n\t\t\ttitle: \"Article Defaults\",\n\t\t\tgroup: \"type-specific\",\n\t\t\ttype: \"object\",\n\t\t\toptions: { collapsible: true, collapsed: true },\n\t\t\tfields: [\n\t\t\t\t{ name: \"publisher\", type: \"schemaMarkupOrganization\" },\n\t\t\t\t{\n\t\t\t\t\tname: \"section\",\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tdescription: \"Default ArticleSection.\",\n\t\t\t\t},\n\t\t\t],\n\t\t}),\n\n\t\tdefineField({\n\t\t\tname: \"product\",\n\t\t\ttitle: \"Product Defaults\",\n\t\t\tgroup: \"type-specific\",\n\t\t\ttype: \"object\",\n\t\t\toptions: { collapsible: true, collapsed: true },\n\t\t\tfields: [\n\t\t\t\t{ name: \"brand\", type: \"schemaMarkupOrganization\" },\n\t\t\t\t{\n\t\t\t\t\tname: \"priceCurrency\",\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tdescription: \"ISO 4217, e.g., USD, EUR.\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"availability\",\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tlist: [\n\t\t\t\t\t\t\t{ title: \"InStock\", value: \"InStock\" },\n\t\t\t\t\t\t\t{ title: \"OutOfStock\", value: \"OutOfStock\" },\n\t\t\t\t\t\t\t{ title: \"PreOrder\", value: \"PreOrder\" },\n\t\t\t\t\t\t\t{ title: \"PreSale\", value: \"PreSale\" },\n\t\t\t\t\t\t\t{ title: \"Discontinued\", value: \"Discontinued\" },\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t}),\n\n\t\tdefineField({\n\t\t\tname: \"event\",\n\t\t\ttitle: \"Event Defaults\",\n\t\t\tgroup: \"type-specific\",\n\t\t\ttype: \"object\",\n\t\t\toptions: { collapsible: true, collapsed: true },\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tname: \"eventAttendanceMode\",\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tlist: [\n\t\t\t\t\t\t\t{ title: \"Offline\", value: \"OfflineEventAttendanceMode\" },\n\t\t\t\t\t\t\t{ title: \"Online\", value: \"OnlineEventAttendanceMode\" },\n\t\t\t\t\t\t\t{ title: \"Mixed\", value: \"MixedEventAttendanceMode\" },\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{ name: \"organizer\", type: \"schemaMarkupOrganization\" },\n\t\t\t],\n\t\t}),\n\n\t\tdefineField({\n\t\t\tname: \"localBusiness\",\n\t\t\ttitle: \"LocalBusiness Defaults\",\n\t\t\tgroup: \"type-specific\",\n\t\t\ttype: \"object\",\n\t\t\toptions: { collapsible: true, collapsed: true },\n\t\t\tfields: [\n\t\t\t\t{ name: \"priceRange\", type: \"string\", description: \"e.g., $, $$, $$$\" },\n\t\t\t\t{ name: \"address\", type: \"schemaMarkupAddress\" },\n\t\t\t\t{ name: \"geo\", type: \"schemaMarkupGeo\" },\n\t\t\t\t{ name: \"aggregateRating\", type: \"schemaMarkupAggregateRating\" },\n\t\t\t],\n\t\t}),\n\n\t\t// ---- Rendering / Behavior ----\n\t\tdefineField({\n\t\t\tname: \"rendering\",\n\t\t\ttitle: \"Rendering Options\",\n\t\t\ttype: \"object\",\n\t\t\toptions: { collapsible: true, collapsed: true },\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tname: \"multiLocaleStrategy\",\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tinitialValue: \"one-per-locale\",\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tlist: [\n\t\t\t\t\t\t\t{ title: \"One <script> per locale\", value: \"one-per-locale\" },\n\t\t\t\t\t\t\t{ title: \"Primary locale only\", value: \"primary-only\" },\n\t\t\t\t\t\t],\n\t\t\t\t\t\tlayout: \"radio\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t}),\n\t],\n\n\tpreview: {\n\t\tselect: { baseUrl: \"baseUrl\", locale: \"defaultLocale\" },\n\t\tprepare: ({ baseUrl, locale }) => ({\n\t\t\ttitle: \"Schema Markup Defaults\",\n\t\t\tsubtitle: `${baseUrl || \"—\"} · ${locale || \"locale not set\"}`,\n\t\t}),\n\t},\n});\n","import { MdSearch, MdShare } from \"react-icons/md\";\nimport { defineField, defineType } from \"sanity\";\nimport FaviconPreview from \"../../components/core/Favicon/FaviconPreview\";\n\nexport const seoDefaults = defineType({\n\tname: \"seoDefaults\",\n\ttitle: \"SEO Defaults\",\n\ttype: \"document\",\n\tgroups: [\n\t\t{\n\t\t\tname: \"metadata\",\n\t\t\ttitle: \"Metadata\",\n\t\t\tdefault: true,\n\t\t\ticon: MdSearch,\n\t\t},\n\t\t{\n\t\t\tname: \"social\",\n\t\t\ttitle: \"Social\",\n\t\t\ticon: MdShare,\n\t\t},\n\t],\n\tfields: [\n\t\tdefineField({\n\t\t\tname: \"siteTitle\",\n\t\t\ttitle: \"Site Title\",\n\t\t\ttype: \"string\",\n\t\t\tdescription:\n\t\t\t\t\"The title of the site. Used for each page and in schema markup.\",\n\t\t\tvalidation: (Rule) => Rule.required(),\n\t\t\tgroup: \"metadata\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"pageTitleTemplate\",\n\t\t\ttitle: \"Page Title Template\",\n\t\t\ttype: \"string\",\n\t\t\tdescription:\n\t\t\t\t\"Template for page titles. Use {siteTitle} and {pageTitle} for the page title. Example: {pageTitle} - {siteTitle}\",\n\t\t\tvalidation: (Rule) => Rule.required(),\n\t\t\tinitialValue: \"{pageTitle} - {siteTitle}\",\n\t\t\tgroup: \"metadata\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"metaDescription\",\n\t\t\ttype: \"metaDescription\",\n\t\t\tgroup: \"metadata\",\n\t\t\tdescription: \"The default meta description for all pages.\",\n\t\t\t// validation: (Rule) => Rule.required(),\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"siteUrl\",\n\t\t\ttitle: \"Site URL\",\n\t\t\ttype: \"url\",\n\t\t\tdescription:\n\t\t\t\t\"Root URL of the website (e.g. https://your-domain.com). Used for canonical and OG tags.\",\n\t\t\tvalidation: (Rule) => Rule.required(),\n\t\t\tgroup: \"metadata\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"favicon\",\n\t\t\ttype: \"favicon\",\n\t\t\tgroup: \"metadata\",\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"twitterHandle\",\n\t\t\ttitle: \"Twitter Handle\",\n\t\t\ttype: \"string\",\n\t\t\tdescription: \"Example: @yourbrand\",\n\t\t\tgroup: \"social\",\n\t\t}),\n\t],\n\tpreview: {\n\t\tselect: {\n\t\t\ttitle: \"siteTitle\",\n\t\t\tsubtitle: \"siteUrl\",\n\t\t},\n\t\tprepare(selection) {\n\t\t\treturn { title: \"SEO Defaults\" };\n\t\t},\n\t},\n});\n","import { defineField, defineType } from \"sanity\";\n\nexport const socialNetworks = defineType({\n\tname: \"socialNetworks\",\n\ttitle: \"Social Networks\",\n\ttype: \"document\",\n\tfields: [\n\t\tdefineField({\n\t\t\tname: \"platform\",\n\t\t\ttitle: \"Platform\",\n\t\t\ttype: \"string\",\n\t\t\tvalidation: (Rule) => Rule.required(),\n\t\t}),\n\t\tdefineField({\n\t\t\tname: \"url\",\n\t\t\ttitle: \"URL\",\n\t\t\ttype: \"url\",\n\t\t\tvalidation: (Rule) => Rule.required(),\n\t\t}),\n\t],\n});\n","import { schemaMarkupDefaults } from \"./schema-defaults\";\nimport { seoDefaults } from \"./seo-defaults\";\nimport { socialNetworks } from \"./social-networks\";\n\nexport default [schemaMarkupDefaults, seoDefaults, socialNetworks];\n","import { definePlugin } from \"sanity\";\nimport entities from \"./schemas/entities\";\nimport global from \"./schemas/global\";\nimport fieldGroups from \"./schemas/fields\";\n\nimport singleton from \"./schemas/singleton\";\nimport SeoLayoutWrapper from \"./components/core/SeoLayoutWrapper\";\n\nexport default definePlugin({\n\tname: \"crawl-me-maybe\",\n\n\tschema: {\n\t\ttypes: [...fieldGroups, ...global, ...entities, ...singleton],\n\t},\n\tstudio: {\n\t\tcomponents: {\n\t\t\tlayout: SeoLayoutWrapper,\n\t\t},\n\t},\n});\n"]}